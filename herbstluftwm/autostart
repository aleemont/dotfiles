#!/usr/bin/env bash
#
# Riccardo Palombo - https://riccardo.im
# Preparato per la community Patreon: patreon.com/riccardopalombo
#
# Config per herbstluftwm con KDE Plasma

hc() {
    herbstclient "$@"
}

hc emit_hook reload

#xsetroot -solid '#303030'
#feh --bg-fill ~/Pictures/wallpaper.jpg

hc keyunbind --all
Mod=Mod4   # Tasto Windows / Mod1 per usare Alt
myTerm=konsole # Terminale preferito
myFM=dolphin # File manager preferito
myBrowser=firefox
myBorderOne='#262626' # Colore bordo primario
myBorderTwo='#303030' # Colore bordo secondario

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-Shift-Return spawn $myTerm
hc keybind $Mod-t spawn $myFM
hc keybind $Mod-w spawn $myBrowser
hc keybind $Mod-o spawn rofi -show drun -display-run "" -drun-display-format {name}
hc keybind $Mod-Alt-o spawn rofi -modi todo:~/.config/rofi/rofi-todo.sh -show todo
hc keybind $Mod-Control-space spawn ~/.config/polybar/scripts/powermenu-alt

#volume
hc keybind XF86AudioRaiseVolume spawn pactl set-sink-volume @DEFAULT_SINK@ +10%
hc keybind XF86AudioLowerVolume spawn pactl set-sink-volume @DEFAULT_SINK@ -10%
hc keybind XF86AudioMute spawn pactl set-sink-mute @DEFAULT_SINK@ toggle

#brightness
hc keybind XF86MonBrightnessUp spawn light -A 5
hc keybind XF86MonBrightnessDown spawn light -U 5

# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right

# splitting frames
# dividi il frame attuale nella direzione richiesta
# e seleziona la nuova parte
hc keybind $Mod-h chain , split bottom 0.5 , focus down
hc keybind $Mod-v chain , split right 0.5 , focus right

# let the current frame explode into subframes
hc keybind $Mod-space split explode

# resizing frames and floating clients
resizestep=0.04
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags (per replicare scorciatoie Gnome)
hc keybind Control-Alt-Down use_index -1 
hc keybind Control-Alt-Up use_index +1 

# layouting
hc keybind $Mod-r remove
#hc keybind $Mod-s floating toggle # Rendere tutto float
hc keybind $Mod-f fullscreen toggle # Rendere un frame fullscreen
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle # Rendere float il frame attivo
hc keybind $Mod-p pseudotile toggle

# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
# Cicla i layout nel frame selezioato (verticale, orizzonale, massimizzato, griglia)
hc keybind $Mod-Shift-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 grid vertical horizontal max    \
               , cycle_layout +1

# mouse (valido solo su finestre float)
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus (spostare il focus su monitor e finestre)
#hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Control-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
#hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme (da ottimizzare)
hc attr theme.tiling.reset 1
hc set frame_border_width 0
hc set always_show_frame 0
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_gap 10
hc watch tags.focus.frame_count
hc -i attribute_changed tags.focus.frame_count | while read; do
  hc or / and , compare tags.focus.frame_count gt 1 , set frame_padding -10 / set frame_padding 0
done &
hc set window_gap 10
hc set smart_window_surroundings 1
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0
hc set focus_crosses_monitor_boundaries 1
hc set swap_monitors_to_get_tag 1

# rules
hc unrule -F
hc rule class='Droidcam' floating=true tag=9
hc rule class='plasmawindowed' floating=true focus=off
hc rule focus=on
hc set focus_follows_mouse 1

# give focus to most common terminals
hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=o
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here
#hc set_monitors 3000x2000+0+0
# or simply:
hc detect_monitors

# find the panel (avvia Polybar e lascia il suo panel come backup)
panel=~/.config/polybar/launch.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
#    hc pad 0 0 0 0
done
